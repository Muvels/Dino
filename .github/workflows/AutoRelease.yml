name: Create Release

on:
  push:
    branches:
      - '**' # Triggers on push to any branch

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16' # Adjust the Node.js version if needed

    - name: Install dependencies
      run: npm install

    - name: Build project
      run: npm run build

    - name: Get current version from GitHub environment variable
      id: get-version
      run: |
        echo "Current version: ${{ vars.CURRENT_VERSION }}"
        echo "::set-output name=version::${{ vars.CURRENT_VERSION }}"

    - name: Increment patch version
      id: increment-version
      run: |
        version=${{ steps.get-version.outputs.version }}
        IFS='.' read -r -a version_parts <<< "$version"
        patch_version=${version_parts[2]}
        new_patch_version=$((patch_version + 1))
        new_version="0.0.${new_patch_version}"
        echo "New version: $new_version"
        echo "::set-output name=new_version::$new_version"

    - name: Update environment variable
      env:
        GITHUB_TOKEN: ${{ secrets.DINO_TOKEN }}
      run: |
        new_version=${{ steps.increment-version.outputs.new_version }}
        echo "New version to be updated: $new_version"
        curl -X PATCH -H "Authorization: token $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/actions/variables/CURRENT_VERSION \
          -d '{"name":"CURRENT_VERSION","value":"'"$new_version"'"}'


    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.DINO_TOKEN }}
      with:
        tag_name: ${{ steps.increment-version.outputs.new_version }}
        release_name: Release ${{ steps.increment-version.outputs.new_version }}
        draft: false
        prerelease: false

    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.DINO_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/bundle.umd.js
        asset_name: bundle.umd.js
        asset_content_type: application/javascript
